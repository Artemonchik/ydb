name: 'YDB Test Workflow'

on:
  workflow_call:
    inputs:
      runner_label:
        description: 'Label of the runner to be used'
        required: false
        default: 'auto-provisioned'
      build_preset:
        description: 'Build preset for the test'
        required: false
        default: 'relwithdebinfo'
      branch:
        description: 'Branch to test'
        required: true
      threads_count:
        description: 'Number of threads to use for tests'
        required: true
      timeout:
        description: 'Timeout in minutes for the build and test job'
        required: true
      test_size:
        description: 'Test sizes (comma-separated)'
        required: true
      test_type:
        description: 'Test types (comma-separated)'
        required: true

jobs:
  ydb-test:
    name: 'Run all tests'
    description: 'Run YDB tests'
    runs-on: ${{ inputs.runner_label || 'auto-provisioned' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Setup ssh key for slice
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SLICE_QA_SSH_PRIVATE_KEY }}

      - name: Setup ydb access
        uses: ./.github/actions/setup_ci_ydb_service_account_key_file_credentials
        with:
          ci_ydb_service_account_key_file_credentials: ${{ secrets.CI_YDB_SERVICE_ACCOUNT_KEY_FILE_CREDENTIALS }}

      - name: Convert JSON to build target string
        id: setup_build_target
        run: |
          BUILD_TARGETS=$(echo ${{ env.BUILD_TARGETS_JSON }} | jq -r '. | join(" ")')
          echo "BUILD_TARGET=$BUILD_TARGETS" >> $GITHUB_ENV

      - name: Build and test
        timeout-minutes: ${{ inputs.timeout }}
        uses: ./.github/actions/build_and_test_ya
        with:
          build_preset: ${{ inputs.build_preset }}
          increment: false
          build_target: ${{ env.BUILD_TARGET }}
          run_build: true
          run_tests: true
          test_retry_count: 3
          test_size: ${{ inputs.test_size }}
          test_type: ${{ inputs.test_type }}
          test_threads: ${{ inputs.threads_count }}
          put_build_results_to_cache: false
          additional_ya_make_args: -DDEBUGINFO_LINES_ONLY
          secs: ${{ format('{{"TESTMO_TOKEN2":"{0}","AWS_KEY_ID":"{1}","AWS_KEY_VALUE":"{2}","REMOTE_CACHE_USERNAME":"{3}","REMOTE_CACHE_PASSWORD":"{4}"}}',
            secrets.TESTMO_TOKEN2, secrets.AWS_KEY_ID, secrets.AWS_KEY_VALUE, secrets.REMOTE_CACHE_USERNAME, secrets.REMOTE_CACHE_PASSWORD) }}
          vars: ${{ format('{{"AWS_BUCKET":"{0}","AWS_ENDPOINT":"{1}","REMOTE_CACHE_URL":"{2}","TESTMO_URL":"{3}","TESTMO_PROJECT_ID":"{4}"}}',
            vars.AWS_BUCKET, vars.AWS_ENDPOINT, vars.REMOTE_CACHE_URL_YA, vars.TESTMO_URL, vars.TESTMO_PROJECT_ID) }}
